{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  //metodo salvar\n  salvar(saludador) {\n    this.http.post('https://nuevo-3f4ed-default-rtdb.firebaseio.com/saludador.json', saludador).subscribe(response => console.log('respuesta ' + response.name), error => console.log('error' + error.error));\n  }\n  //Mostrar\n  mostrar() {\n    this.http.get('https://nuevo-3f4ed-default-rtdb.firebaseio.com/saludador.json').pipe(map(responseData => {\n      const items = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key)) {\n          items.push({\n            id: key,\n            ...responseData[key]\n          });\n        }\n      }\n      return items;\n    })).subscribe(items => {\n      console.log(items);\n    });\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAK1B,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EACxC;EACAC,MAAM,CAACC,SAAkB;IACxB,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,gEAAgE,EAAED,SAAS,CAAC,CAC9FE,SAAS,CACRC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,YAAY,GAACF,QAAQ,CAACG,IAAI,CAAE,EACpDC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAE,OAAO,GAAGE,KAAK,CAACA,KAAK,CAAE,CAC9C;EACH;EAEA;EACAC,OAAO;IACL,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,gEAAgE,CAAC,CAACC,IAAI,CAClFf,GAAG,CAAGgB,YAAgB,IAAI;MACxB,MAAMC,KAAK,GAAG,EAAE;MAChB,KAAK,MAAMC,GAAG,IAAIF,YAAY,EAAE;QAC9B,IAAGA,YAAY,CAACG,cAAc,CAACD,GAAG,CAAC,EAAC;UAClCD,KAAK,CAACG,IAAI,CAAC;YAACC,EAAE,EAAGH,GAAG;YAAE,GAAGF,YAAY,CAACE,GAAG;UAAC,CAAE,CAAC;;;MAGjD,OAAOD,KAAK;IACd,CAAC,CAAC,CAAE,CAACV,SAAS,CAACU,KAAK,IAAG;MAAER,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IAAE,CAAC,CAAC;EACnD;;AAxBWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["map","DataService","constructor","http","salvar","saludador","post","subscribe","response","console","log","name","error","mostrar","get","pipe","responseData","items","key","hasOwnProperty","push","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\Documentos\\UV\\Semestre VI\\Tecnologias Web\\78928\\angular-01\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  //metodo salvar\r\n  salvar(saludador:String[]){\r\n\t  this.http.post<any>('https://nuevo-3f4ed-default-rtdb.firebaseio.com/saludador.json', saludador)\r\n    .subscribe(\r\n      response => console.log('respuesta '+response.name ),\r\n      error => console.log ('error' + error.error )\r\n    );\r\n  }\r\n\r\n  //Mostrar\r\n  mostrar(){\r\n    this.http.get('https://nuevo-3f4ed-default-rtdb.firebaseio.com/saludador.json').pipe(\r\n      map( (responseData:any) => {\r\n        const items = [];\r\n        for (const key in responseData) {\r\n          if(responseData.hasOwnProperty(key)){\r\n            items.push({id : key, ...responseData[key] });\r\n          }\r\n        }\r\n        return items;\r\n      }) ).subscribe(items => {console.log(items); });\r\n  }\r\n\r\n\t\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}